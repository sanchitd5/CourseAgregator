{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\sanch\\\\Documents\\\\CourseA\\\\CourseAgregator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\sanch\\\\Documents\\\\CourseA\\\\CourseAgregator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\sanch\\\\Documents\\\\CourseA\\\\CourseAgregator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\sanch\\\\Documents\\\\CourseA\\\\CourseAgregator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\sanch\\\\Documents\\\\CourseA\\\\CourseAgregator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\sanch\\\\Documents\\\\CourseA\\\\CourseAgregator\\\\src\\\\views\\\\login\\\\login.jsx\";\nimport React, { Component } from 'react';\nimport AppHelper from \"helpers/AppHelper.js\";\nimport { connect } from 'react-redux';\nimport { requestLogin, developerModeLogin } from 'actions';\nimport MainBackground from 'images/login_background.jpg';\nimport M from 'materialize-css';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.assignDropdown = function () {\n      var elem = document.querySelectorAll('.dropdown-trigger');\n      M.Dropdown.init(elem, {\n        alignment: \"right\",\n        constrainWidth: false\n      });\n    };\n\n    _this.errorMessage = function () {\n      if (_this.state.error) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, _this.state.errorMsg));\n      }\n    };\n\n    _this.handleEmailChange = function (e) {\n      _this.setState({\n        emailId: e.target.value\n      });\n\n      window.localStorage.setItem(\"username\", e.target.value);\n    };\n\n    _this.handlePasswordChange = function (e) {\n      _this.setState({\n        password: e.target.value\n      });\n    };\n\n    _this.validationCheck = function () {\n      var email = _this.state.emailId;\n      var password = _this.state.password;\n\n      if (email.length > 0 && password.length > 0) {\n        return true;\n      } else {\n        _this.setState({\n          error: true,\n          errorMsg: \"Email or password must not be empty!\"\n        });\n\n        return false;\n      }\n    };\n\n    _this.performLogin = function (e) {\n      e.preventDefault();\n\n      if (_this.state.developerMode) {\n        console.log('inside developerMode login');\n\n        _this.props.dispatchDeveloperModeLogin();\n\n        AppHelper.developerModeLoginUser(true);\n        return;\n      }\n\n      console.log('outside developerMode login');\n      if (!_this.validationCheck()) return;\n\n      _this.props.dispatchLogin(_this.state).then(function (response) {\n        if (response && response.payload && response.payload.data && response.payload.data.data && response.payload.data.data.accessToken) {\n          var accessToken = response.payload.data.data.accessToken;\n          AppHelper.loginUser(true, accessToken);\n        } else {\n          _this.setState({\n            error: true,\n            errorMsg: \"Invalid credentials!\"\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      backgroundImage: 'url(' + MainBackground + ')',\n      emailId: '',\n      password: '',\n      developerMode: true,\n      // Change this to false to contact API\n      error: false,\n      errorMsg: ''\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      document.body.style.backgroundImage = this.state.backgroundImage;\n      return React.createElement(\"div\", {\n        className: \"Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-pageX\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"formX\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"login-formX\",\n        id: \"login_form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"flow-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"LOG IN\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        placeholder: \"Email\",\n        id: \"email\",\n        type: \"email\",\n        className: \"validate\",\n        onChange: this.handleEmailChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        placeholder: \"Password\",\n        id: \"password\",\n        type: \"password\",\n        className: \"validate\",\n        onChange: this.handlePasswordChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), \"  \", this.errorMessage(), this.props.loginLoading ? \"Loading...\" : React.createElement(\"button\", {\n        className: \"red waves-effect waves-light\",\n        onClick: this.performLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"New here?\"))))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dispatchLogin: function dispatchLogin(data) {\n      return dispatch(requestLogin(data));\n    },\n    dispatchDeveloperModeLogin: function dispatchDeveloperModeLogin() {\n      return dispatch(developerModeLogin());\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loginLoading: state.loginStatus.loginLoading\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:\\Users\\sanch\\Documents\\CourseA\\CourseAgregator\\src\\views\\login\\login.jsx"],"names":["React","Component","AppHelper","connect","requestLogin","developerModeLogin","MainBackground","M","Login","props","assignDropdown","elem","document","querySelectorAll","Dropdown","init","alignment","constrainWidth","errorMessage","state","error","errorMsg","handleEmailChange","e","setState","emailId","target","value","window","localStorage","setItem","handlePasswordChange","password","validationCheck","email","length","performLogin","preventDefault","developerMode","console","log","dispatchDeveloperModeLogin","developerModeLoginUser","dispatchLogin","then","response","payload","data","accessToken","loginUser","backgroundImage","body","style","loginLoading","mapDispatchToProps","dispatch","mapStateToProps","loginStatus"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport AppHelper from \"helpers/AppHelper.js\";\r\nimport { connect } from 'react-redux';\r\nimport { requestLogin, developerModeLogin } from 'actions';\r\nimport MainBackground from 'images/login_background.jpg'\r\nimport M from 'materialize-css';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      backgroundImage: 'url('+MainBackground+')',\r\n      emailId: '',\r\n      password: '',\r\n      developerMode: true, // Change this to false to contact API\r\n      error: false,\r\n      errorMsg: ''\r\n\r\n    };\r\n\r\n  }\r\n\r\n  assignDropdown= () =>{\r\n    let elem= document.querySelectorAll('.dropdown-trigger');\r\n    M.Dropdown.init(elem,{alignment:\"right\",constrainWidth: false});\r\n  }\r\n\r\n  errorMessage = () => {\r\n    if (this.state.error) {\r\n      return (\r\n        <p><b>{this.state.errorMsg}</b></p>\r\n      )\r\n    }\r\n  }\r\n\r\n  handleEmailChange = (e) => {\r\n    this.setState({\r\n      emailId: e.target.value\r\n    });\r\n    window.localStorage.setItem(\"username\",e.target.value);\r\n  }\r\n\r\n  handlePasswordChange = (e) => {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  validationCheck = () => {\r\n    let email = this.state.emailId\r\n    let password = this.state.password\r\n    if ((email.length > 0) && (password.length > 0)) {\r\n      return true\r\n    } else {\r\n      this.setState({\r\n        error: true,\r\n        errorMsg: \"Email or password must not be empty!\"\r\n      })\r\n      return false\r\n    }\r\n  }\r\n\r\n  performLogin = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.developerMode) {\r\n      console.log('inside developerMode login');\r\n      this.props.dispatchDeveloperModeLogin();\r\n      AppHelper.developerModeLoginUser(true);\r\n      \r\n      return;\r\n    }\r\n    console.log('outside developerMode login');\r\n    if (!this.validationCheck()) return;\r\n    this.props.dispatchLogin(this.state).then((response) => {\r\n      if (\r\n        response && response.payload && response.payload.data &&\r\n        response.payload.data.data && response.payload.data.data.accessToken\r\n      ) {\r\n        const accessToken = response.payload.data.data.accessToken;\r\n        AppHelper.loginUser(true, accessToken);\r\n      } else {\r\n        this.setState({\r\n          error: true,\r\n          errorMsg: \"Invalid credentials!\"\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    document.body.style.backgroundImage=this.state.backgroundImage;\r\n    return (\r\n      \r\n  <div className=\"Login\">\r\n      <div className=\"container\">\r\n\r\n        <div className=\"login-pageX\">\r\n          <div className=\"formX\">\r\n            <form className=\"login-formX\" id=\"login_form\">\r\n            <label className=\"flow-text\">LOG IN</label><br/><br/>\r\n            <input placeholder=\"Email\" id=\"email\" type=\"email\" className=\"validate\" onChange={this.handleEmailChange} />\r\n            <input placeholder=\"Password\" id=\"password\" type=\"password\" className=\"validate\" onChange={this.handlePasswordChange} />\r\n              <br/><br/>  {this.errorMessage()}\r\n                {\r\n                  this.props.loginLoading ?\r\n                    \"Loading...\" :\r\n                    <button className=\"red waves-effect waves-light\" onClick={this.performLogin} >\r\n                      Login\r\n                    </button>\r\n                }\r\n            <br/><label>New here?</label>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    dispatchLogin: (data) => dispatch(requestLogin(data)),\r\n    dispatchDeveloperModeLogin: () => dispatch(developerModeLogin())\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loginLoading: state.loginStatus.loginLoading\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"]},"metadata":{},"sourceType":"module"}